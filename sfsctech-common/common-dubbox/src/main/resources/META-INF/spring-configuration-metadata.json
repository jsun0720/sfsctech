{
  "groups": [
    {
      "name": "dubbo",
      "type": "com.sfsctech.dubbox.properties.DubboProperties",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties"
    },
    {
      "name": "dubbo.application",
      "type": "com.sfsctech.dubbox.properties.DubboProperties$Application",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties",
      "sourceMethod": "getApplication()"
    },
    {
      "name": "dubbo.registry",
      "type": "com.sfsctech.dubbox.properties.DubboProperties$Registry",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties",
      "sourceMethod": "getRegistry()"
    },
    {
      "name": "dubbo.protocol",
      "type": "com.sfsctech.dubbox.properties.DubboProperties$Protocol",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties",
      "sourceMethod": "getProtocol()"
    },
    {
      "name": "dubbo.rpc",
      "type": "com.sfsctech.dubbox.properties.DubboProperties$Rpc",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties",
      "sourceMethod": "getRpc()"
    },
    {
      "name": "website.sso",
      "type": "com.sfsctech.dubbox.properties.SSOProperties",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.reference",
      "type": "com.sfsctech.dubbox.properties.SSOProperties$Reference",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties",
      "sourceMethod": "getReference()"
    },
    {
      "name": "website.jwt",
      "type": "com.sfsctech.dubbox.properties.JwtProperties",
      "sourceType": "com.sfsctech.dubbox.properties.JwtProperties"
    }
  ],
  "properties": [
    {
      "name": "dubbo.application.name",
      "type": "java.lang.String",
      "description": "服务提供者名称",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Application"
    },
    {
      "name": "dubbo.application.logger",
      "type": "java.lang.String",
      "description": "日志适配",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Application"
    },
    {
      "name": "dubbo.registry.protocol",
      "type": "java.lang.String",
      "description": "zookeeper注册中心类型",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Registry"
    },
    {
      "name": "dubbo.registry.address",
      "type": "java.lang.String",
      "description": "zookeeper注册中心服务地址",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Registry"
    },
    {
      "name": "dubbo.registry.check",
      "type": "java.lang.Boolean",
      "description": "注册中心不存在时，是否报错",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Registry"
    },
    {
      "name": "dubbo.registry.register",
      "type": "java.lang.Boolean",
      "description": "是否向此注册中心注册服务，如果设为false，将只订阅，不注册",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Registry"
    },
    {
      "name": "dubbo.registry.subscribe",
      "type": "java.lang.Boolean",
      "description": "是否向此注册中心订阅服务，如果设为false，将只注册，不订阅",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Registry"
    },
    {
      "name": "dubbo.registry.timeout",
      "type": "java.lang.Integer",
      "description": "注册中心请求超时时间(毫秒)",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Registry"
    },
    {
      "name": "dubbo.protocol.kryo",
      "type": "java.lang.Boolean",
      "description": "是否使用kryo序列化",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Protocol"
    },
    {
      "name": "dubbo.protocol.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Protocol",
      "defaultValue": "dubbo"
    },
    {
      "name": "dubbo.protocol.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Protocol",
      "defaultValue": 20080
    },
    {
      "name": "dubbo.protocol.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Protocol"
    },
    {
      "name": "dubbo.protocol.single",
      "type": "java.lang.Boolean",
      "description": "是否是单协议",
      "defaultValue": true
    },
    {
      "name": "dubbo.protocol.multiple",
      "type": "java.util.Map<java.lang.String,com.alibaba.dubbo.multiple.ProtocolConfig>",
      "description": "dubbo 多协议配置",
      "sourceType": "java.util.Map<java.lang.String,com.alibaba.dubbo.multiple.ProtocolConfig>"
    },
    {
      "name": "dubbo.protocol.multiple.dubbo",
      "type": "java.lang.String",
      "description": "dubbo通信协议，dubbo缺省协议，适用场景：常规远程服务方法调用"
    },
    {
      "name": "dubbo.protocol.multiple.dubbo.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.dubbo.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.dubbo.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.rmi",
      "type": "java.lang.String",
      "description": "rmi通信协议，采用JDK标准的java.rmi.*实现，适用场景：常规远程服务方法调用，与原生RMI服务互操作。"
    },
    {
      "name": "dubbo.protocol.multiple.rmi.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.rmi.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.rmi.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.hessian",
      "type": "java.lang.String",
      "description": "hessian通信协议，基于Hessian框架的通信协议，适用场景：页面传输，文件传输，与原生hessian服务交互。"
    },
    {
      "name": "dubbo.protocol.multiple.hessian.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.hessian.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.hessian.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.http",
      "type": "java.lang.String",
      "description": "http通信协议，采用Spring的HttpInvoker实现，适用场景：前端调用、移动端调用，跨语言调用。"
    },
    {
      "name": "dubbo.protocol.multiple.http.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.http.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.http.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.webservice",
      "type": "java.lang.String",
      "description": "webservice通信协议，基于CXF的frontend-simple和transports-http实现，适用场景：系统集成，跨语言调用。"
    },
    {
      "name": "dubbo.protocol.multiple.webservice.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.webservice.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.webservice.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.thrift",
      "type": "java.lang.String",
      "description": "thrift通信协议，基于Thrift框架的通信协议，不建议使用"
    },
    {
      "name": "dubbo.protocol.multiple.thrift.name",
      "type": "java.lang.String",
      "description": "协议名称",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.thrift.port",
      "type": "java.lang.Integer",
      "description": "协议端口",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.protocol.multiple.thrift.server",
      "type": "java.lang.String",
      "description": "协议的服务器端实现类型",
      "sourceType": "com.alibaba.dubbo.multiple.ProtocolConfig"
    },
    {
      "name": "dubbo.rpc.service-package",
      "type": "java.lang.String",
      "description": "服务类所在的包路径，多个包名可以使用英文逗号分隔",
      "sourceType": "com.sfsctech.dubbox.properties.DubboProperties$Rpc"
    },
    {
      "name": "website.sso.portal-url",
      "type": "java.lang.String",
      "description": "门户首页路径",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.login-url",
      "type": "java.lang.String",
      "description": "SSO 登录路径",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.logout-url",
      "type": "java.lang.String",
      "description": "SSO 登出路径",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.check-url",
      "type": "java.lang.String",
      "description": "SSO Session校验路径",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.register-url",
      "type": "java.lang.String",
      "description": "SSO 用户注册路径",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.forget-url",
      "type": "java.lang.String",
      "description": "SSO 密码找回路径",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties"
    },
    {
      "name": "website.sso.reference.lazy",
      "type": "java.lang.Boolean",
      "description": "Dubbo服务是否延迟加载默认true",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties$Reference",
      "defaultValue": true
    },
    {
      "name": "website.sso.reference.version",
      "type": "java.lang.String",
      "description": "Dubbo消费服务的版本号",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties$Reference"
    },
    {
      "name": "website.sso.reference.timeout",
      "type": "java.lang.Integer",
      "description": "Dubbo服务连接超时时间默认2000",
      "sourceType": "com.sfsctech.dubbox.properties.SSOProperties$Reference",
      "defaultValue": 2000
    },
    {
      "name": "website.jwt.subject",
      "type": "java.lang.String",
      "description": "jwt 主题",
      "sourceType": "com.sfsctech.dubbox.properties.JwtProperties"
    },
    {
      "name": "website.jwt.issuer",
      "type": "java.lang.String",
      "description": "jwt 发行方",
      "sourceType": "com.sfsctech.dubbox.properties.JwtProperties"
    },
    {
      "name": "website.jwt.expiration",
      "type": "java.lang.Long",
      "description": "jwt 保持时间",
      "sourceType": "com.sfsctech.dubbox.properties.JwtProperties"
    }
  ],
  "hints": [
    {
      "name": "dubbo.protocol.name",
      "values": [
        {
          "value": "dubbo",
          "description": "dubbo通信协议，dubbo缺省协议，适用场景：常规远程服务方法调用"
        },
        {
          "value": "rmi",
          "description": "rmi通信协议，采用JDK标准的java.rmi.*实现，适用场景：常规远程服务方法调用，与原生RMI服务互操作。"
        },
        {
          "value": "hessian",
          "description": "hessian通信协议，基于Hessian框架的通信协议，适用场景：页面传输，文件传输，与原生hessian服务交互。"
        },
        {
          "value": "http",
          "description": "http通信协议，采用Spring的HttpInvoker实现，适用场景：前端调用、移动端调用，跨语言调用。"
        },
        {
          "value": "webservice",
          "description": "webservice通信协议，基于CXF的frontend-simple和transports-http实现，适用场景：系统集成，跨语言调用。"
        },
        {
          "value": "thrif",
          "description": "thrift通信协议，基于Thrift框架的通信协议，不建议使用"
        }
      ]
    },
    {
      "name": "dubbo.protocol.server",
      "values": [
        {
          "value": "mina"
        },
        {
          "value": "netty"
        },
        {
          "value": "jetty"
        },
        {
          "value": "servlet"
        }
      ]
    },
    {
      "name": "dubbo.registry.protocol",
      "values": [
        {
          "value": "zookeeper"
        },
        {
          "value": "redis"
        },
        {
          "value": "simple"
        },
        {
          "value": "multicast"
        }
      ]
    }
  ]
}