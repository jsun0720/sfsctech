{
  "groups": [
    {
      "name": "website",
      "type": "com.sfsctech.spring.properties.WebsiteProperties",
      "sourceType": "com.sfsctech.spring.properties.WebsiteProperties"
    },
    {
      "name": "website.support",
      "type": "com.sfsctech.spring.properties.WebsiteProperties$Support",
      "sourceType": "com.sfsctech.spring.properties.WebsiteProperties",
      "sourceMethod": "getSupport()"
    },
    {
      "name": "website.session",
      "type": "com.sfsctech.spring.properties.WebsiteProperties$Session",
      "sourceType": "com.sfsctech.spring.properties.WebsiteProperties",
      "sourceMethod": "getSession()"
    },
    {
      "name": "server.tomcat",
      "type": "com.sfsctech.spring.properties.TomcatProperties",
      "sourceType": "com.sfsctech.spring.properties.TomcatProperties"
    }
  ],
  "properties": [
    {
      "name": "website.support.static-resources",
      "type": "java.lang.String",
      "description": "静态资源服务地址",
      "sourceType": "com.sfsctech.spring.properties.WebsiteProperties$Support"
    },
    {
      "name": "website.support.welcome-file",
      "type": "java.lang.String",
      "description": "网站欢迎页面地址",
      "sourceType": "com.sfsctech.spring.properties.WebsiteProperties$Support"
    },
    {
      "name": "website.support.uploadPath",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "上传文件路径",
      "sourceType": "java.util.Map<java.lang.String, java.lang.String>"
    },
    {
      "name": "website.session.exclude-path",
      "type": "java.util.Set<java.lang.String>",
      "description": "Session排除校验路径",
      "sourceType": "com.sfsctech.spring.properties.WebsiteProperties$Session"
    },
    {
      "name": "server.tomcat.optimize",
      "type": "java.lang.Boolean",
      "description": "tomcat优化",
      "sourceType": "com.sfsctech.spring.properties.TomcatProperties"
    },
    {
      "name": "server.tomcat.connector",
      "type": "java.lang.String",
      "description": "tomcat连接器",
      "sourceType": "com.sfsctech.spring.properties.TomcatProperties"
    },
    {
      "name": "server.tomcat.connectionTimeout",
      "type": "java.lang.Integer",
      "description": "连接时间",
      "sourceType": "com.sfsctech.spring.properties.TomcatProperties"
    },
    {
      "name": "server.tomcat.maxKeepAliveRequests",
      "type": "java.lang.Integer",
      "description": "一次连接可以进行的HTTP请求的最大请求次数",
      "sourceType": "com.sfsctech.spring.properties.TomcatProperties"
    },
    {
      "name": "server.tomcat.keepAliveTimeout",
      "type": "java.lang.Integer",
      "description": "一次连接中的多次请求传输之间的时间",
      "sourceType": "com.sfsctech.spring.properties.TomcatProperties"
    }
  ],
  "hints": [
    {
      "name": "server.tomcat.connector",
      "values": [
        {
          "value": "org.apache.coyote.http11.Http11AprProtocol",
          "description": "tomcat连接器Http11AprProtocol"
        },
        {
          "value": "org.apache.coyote.http11.Http11NioProtocol",
          "description": "tomcat连接器Http11NioProtocol"
        }
      ]
    },
    {
      "name": "liquibase.change-log",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.springframework.core.io.Resource"
          }
        }
      ]
    },
    {
      "name": "server.jsp-servlet.class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.servlet.http.HttpServlet"
          }
        }
      ]
    },
    {
      "name": "spring.cache.jcache.provider",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.cache.spi.CachingProvider"
          }
        }
      ]
    },
    {
      "name": "spring.data.cassandra.schema-action",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.springframework.data.cassandra.config.SchemaAction"
          }
        }
      ]
    },
    {
      "name": "spring.data.mongodb.field-naming-strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.springframework.data.mapping.model.FieldNamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.data.neo4j.compiler",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.neo4j.ogm.compiler.Compiler"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.data",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.driver-class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "java.sql.Driver"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.schema",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.datasource.xa.data-source-class-name",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.sql.XADataSource"
          }
        }
      ]
    },
    {
      "name": "spring.http.converters.preferred-json-mapper",
      "values": [
        {
          "value": "gson"
        },
        {
          "value": "jackson"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.jmx.server",
      "providers": [
        {
          "name": "spring-bean-reference",
          "parameters": {
            "target": "javax.management.MBeanServer"
          }
        }
      ]
    },
    {
      "name": "spring.jpa.hibernate.naming.implicit-strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.hibernate.boot.model.naming.ImplicitNamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.jpa.hibernate.naming.physical-strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.hibernate.boot.model.naming.PhysicalNamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.jpa.hibernate.naming.strategy",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "org.hibernate.cfg.NamingStrategy"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.auto-offset-reset",
      "values": [
        {
          "value": "earliest",
          "description": "Automatically reset the offset to the earliest offset."
        },
        {
          "value": "latest",
          "description": "Automatically reset the offset to the latest offset."
        },
        {
          "value": "none",
          "description": "Throw exception to the consumer if no previous offset is found for the consumer's group."
        },
        {
          "value": "exception",
          "description": "Throw exception to the consumer."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.key-deserializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Deserializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.value-deserializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Deserializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.producer.key-serializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Serializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.producer.value-serializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Serializer"
          }
        }
      ]
    }
  ]
}